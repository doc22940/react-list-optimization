{"version":3,"sources":["components/Intro.js","components/ListItem.js","components/List.js","components/GitHubLink.js","components/Toggle.js","data.js","components/App.js","index.js"],"names":["Intro","react_default","a","createElement","className","ListItem","_ref","isSelected","onClick","name","concat","memo","List","items","useMemoedItem","_useSelectionState","defaultItems","arguments","length","undefined","_useReducer","useReducer","state","action","_action","Object","slicedToArray","type","payload","_payload","itemName","filteredItems","selectedItems","filter","item","toConsumableArray","objectSpread","Error","_useReducer2","dispatch","toggleItem","useCallback","useSelectionState","_useSelectionState2","T","MemoedListItem","react","map","_ref2","color","includes","key","octocatWave","keyframes","_templateObject","Link","styled","_templateObject2","Svg","_templateObject3","GithubLink","href","aria-label","width","height","viewBox","aria-hidden","d","fill","Toggle","onChange","isChecked","colors","fruits","data","reduce","size","acc","fruit","App","_useState","useState","_useState2","toggleUseMemoedItem","components_Intro","components_Toggle","components_List","DATA","GitHubLink","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d047973.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Intro = () => (\n  <div className=\"intro\">\n    <h1 className=\"intro__title\">React List Optimzations</h1>\n    <p className=\"intro__desc\">\n      Using a combination of React's memo, useReducer and useCallback, we can\n      ensure only the items that changed below are actually re-rendered. Using\n      the React Dev Tools's highlight updates feature, you can observe the\n      difference in re-renders below by clicking list items.\n    </p>\n  </div>\n);\n\nexport default Intro;\n","import React, { memo } from \"react\";\n\nexport const ListItem = ({ isSelected, onClick, name }) => {\n  return (\n    <li\n      className={`list__item list__item list__item--${\n        isSelected ? \"is-selected\" : \"not-selected\"\n      }`}\n      onClick={() => onClick(name, isSelected)}\n    >\n      {name}\n    </li>\n  );\n};\n\nexport default memo(ListItem);\n","import React, { Fragment, useReducer, useCallback } from \"react\";\n\nimport MemoedListItem, { ListItem } from \"./ListItem\";\n\nfunction useSelectionState(defaultItems = []) {\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      const [type, payload] = action;\n      switch (type) {\n        case \"toggle-item\":\n          const [itemName, isSelected] = payload;\n\n          let filteredItems = [];\n\n          if (isSelected) {\n            filteredItems = state.selectedItems.filter(item => {\n              return item !== itemName;\n            });\n          } else {\n            filteredItems = [...state.selectedItems, itemName];\n          }\n\n          return { ...state, selectedItems: filteredItems };\n        default:\n          throw new Error(\"action not implemented\");\n      }\n    },\n    {\n      selectedItems: defaultItems\n    }\n  );\n  const toggleItem = useCallback(\n    (itemName, isSelected) => {\n      dispatch([\"toggle-item\", [itemName, isSelected]]);\n    },\n    [dispatch]\n  );\n  return [state.selectedItems, toggleItem];\n}\n\nconst List = ({ items, useMemoedItem }) => {\n  const [selectedItems, toggleItem] = useSelectionState([]);\n  // Based on the toggle we either use the memoed version\n  // or the default version\n  const T = useMemoedItem ? MemoedListItem : ListItem;\n  return (\n    <Fragment>\n      <ul className=\"list\">\n        {items.map(({ name, color }) => {\n          const isSelected = selectedItems.includes(name);\n          return (\n            <T\n              name={name}\n              key={name}\n              color={color}\n              isSelected={isSelected}\n              onClick={toggleItem}\n            />\n          );\n        })}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst octocatWave = keyframes`\n  0%,\n  100% {\n    transform: rotate(0);\n  }\n  20%,\n  60% {\n    transform: rotate(-25deg);\n  }\n  40%,\n  80% {\n    transform: rotate(10deg);\n  }\n`;\n\nconst Link = styled.a`\n  outline: none !important;\n  &:hover .octo-arm {\n    animation: ${octocatWave} 560ms ease-in-out;\n  }\n  & .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  @media screen and (max-width: 500px) {\n    &:hover .octo-arm {\n      animation: none;\n    }\n    & .octo-arm {\n      animation: ${octocatWave} 560ms ease-in-out;\n    }\n  }\n`;\n\nconst Svg = styled(\"svg\")`\n  z-index: 99;\n  fill: #4886fe;\n  color: #fff;\n  position: absolute;\n  top: 0;\n  border: 0;\n  right: 0;\n`;\n\nconst GithubLink = () => (\n  <Link\n    href=\"https://github.com/tsnolan23/react-list-optimization\"\n    aria-label=\"View source on Github\"\n  >\n    <Svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        className=\"octo-arm\"\n        fill=\"currentColor\"\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      />\n      <path\n        className=\"octo-body\"\n        fill=\"currentColor\"\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      />\n    </Svg>\n  </Link>\n);\n\nexport default GithubLink;\n","import React from \"react\";\n\nconst Toggle = ({ onChange, isChecked }) => (\n  <div className=\"toggle\" onClick={() => onChange(!isChecked)}>\n    <div className=\"toggle__label\">Enable Optimzation?</div>\n    <div className=\"toggle__input\">\n      <div\n        className={`toggle__indicator toggle__indicator--${\n          isChecked ? \"checked\" : \"not-checked\"\n        }`}\n      />\n    </div>\n  </div>\n);\n\nexport default Toggle;\n","const sizes = [\"tiny\", \"small\", \"medium\", \"large\", \"huge\"];\nconst colors = [\n  \"navy\",\n  \"blue\",\n  \"aqua\",\n  \"teal\",\n  \"olive\",\n  \"green\",\n  \"lime\",\n  \"yellow\",\n  \"orange\",\n  \"red\",\n  \"maroon\",\n  \"fuchsia\",\n  \"purple\",\n  \"silver\",\n  \"gray\",\n  \"black\"\n];\nconst fruits = [\n  \"apple\",\n  \"banana\",\n  \"watermelon\",\n  \"orange\",\n  \"peach\",\n  \"tangerine\",\n  \"pear\",\n  \"kiwi\",\n  \"mango\",\n  \"pineapple\"\n];\n\nconst data = sizes.reduce(\n  (items, size) => [\n    ...items,\n    ...fruits.reduce(\n      (acc, fruit) => [\n        ...acc,\n        ...colors.reduce(\n          (acc, color) => [\n            ...acc,\n            {\n              name: `${size} ${color} ${fruit}`,\n              color\n            }\n          ],\n          []\n        )\n      ],\n      []\n    )\n  ],\n  []\n);\n\nexport default data;\n","import React, { useState } from \"react\";\n\nimport Intro from \"./Intro\";\nimport List from \"./List\";\nimport GitHubLink from \"./GitHubLink\";\nimport Toggle from \"./Toggle\";\n\nimport DATA from \"../data\";\n\nconst App = () => {\n  const [useMemoedItem, toggleUseMemoedItem] = useState(true);\n  return (\n    <div>\n      <Intro />\n      <Toggle isChecked={useMemoedItem} onChange={toggleUseMemoedItem} />\n      <List items={DATA} useMemoedItem={useMemoedItem} />\n      <GitHubLink />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}